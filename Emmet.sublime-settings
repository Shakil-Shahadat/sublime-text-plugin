{
	// Automatically mark Emmet abbreviation when typing text: marked abbreviation
	// is highlighted with green underline.
	// Works in limited syntaxes only, see `abbreviation_scopes` option
	"auto_mark": true,

	// Preview captured abbreviations, works only if `auto_mark` is enabled
	"abbreviation_preview": true,

	// Scope for marked abbreviation region highlighting
	"marker_scope": "region.accent",

	// Editor scope to Emmet syntax mapping
	"syntax_scopes": {
		"html": "text.html - source - meta.attribute-with-value.style",
		"xml": "text.xml - text.xml.xsl",
		"xsl": "text.xml.xsl",
		"jsx": "source.js.jsx | source.tsx",
		"haml": "source.haml",
		"jade": "text.jade | source.pyjade",
		"pug": "text.pug | source.pypug",
		"slim": "text.slim",

		"css": "source.css | meta.attribute-with-value.style.html string.quoted",
		"sass": "source.sass",
		"scss": "source.scss",
		"less": "source.less",
		"stylus": "source.stylus",
		"sss": "source.sss"
	},

	// List of scopes with inline context
	"inline_scopes": [
		"meta.attribute-with-value.style.html"
	],

	// List of scope selectors where abbreviation marker should be activated,
	// e.g. plugin will mark text that user types as abbreviation
	"abbreviation_scopes": [
		"text.html - source - meta - comment",
		"(source.css | source.scss | source.less) & meta.property-list",
		"(source.css | source.scss | source.less) - meta.selector - meta.property-value - meta.property-name - string - punctuation - comment",
		"source.js.jsx | source.tsx",
		// Inline CSS
		"text.html meta.attribute-with-value.style (string.quoted | source.css)"
	],

	// List of scopes where Emmet abbreviations should not be be captured.
	// If avy of the following scopes matches, `abbreviation_scopes`
	// will be ignored
	"ignore_scopes": [],

	// Expand Emmet abbreviation with Tab key when in abbreviation marker
	"tab_expand": true,

	// Display open tag preview next to closing tag when caret is inside it
	// and open tag is not currently visible
	"tag_preview": false,

	// The maximum file size where Emmet will capture HTML tag context for abbreviation.
	// Tag context is used for resolving implicit tag names in abbreviation
	// (e.g. `.item` should expand to `<li class="item">` inside `<ul>` tag), but
	// requires full document scan
	"context_size_limit": 102400,

	// The maximum selection size for instant preview of Wrap with Abbreviation action.
	"wrap_size_preview": 10240,

	// Override default Toggle Comment with Emmet variation for specified syntax scopes
	// defined in `comment_scopes`. When enabled, if you run Toggle Comment action
	// without selecting any text, Emmet will try to find matching HTML tag pair
	// for current caret position and comment entire tag instead of current line.
	// If this option is disabled, you can create keyboard shortcut for
	// `toggle_comment` action.
    "comment": false,

    // Outputs everything between `[` and `]` only if specified attribute name
    // (written in UPPERCASE) exists in element. Attribute name is replaced with
    // actual value. Use `\n` to add a newline.
    "comment_template": "\n<!-- /[#ID][.CLASS] -->",
	"comment_scopes": [
		"text.html - source",
		"text.xml",
		"source.css",
		"source.scss",
		"source.less"
	],

	// Max size of file to convert to data:URL. Set to 0 to disable limit
    "max_data_url": 20480,

    // Output code style
    // Defines how self-closing tags (like `<img>` or `<br>`) and boolean attributes
    // (like `disabled`) will look in generated code.
    // Possible values are "html", "xhtml", "xml"
    "markup_style": "html",

    // Attribute value quotes, "double" or "single"
    "attribute_quotes": "double",

    // Enable BEM support.
    // When enabled, Emmet will treat class names starting with `-`` as element
    // and with `_` as modifier in BEM (https://en.bem.info) notation.
    // These class names will inherit block name from current or ancestor element.
    // For example, the abbreviation `ul.nav.nav_secondary>li.nav__item` can be
    // shortened to `ul.nav._secondary>li.-item` with this option enabled.
    "bem": false,

    // When enabled, tries to shorten generated HEX color values for CSS abbreviations.
    // For example, `c#0` abbreviation can be expanded either to `color: #000;`
    // or `color: #000000;`
    "short_hex": true,

	// Config for Emmet
	// See `GlobalConfig` interface for supported properties: https://github.com/emmetio/emmet/blob/master/src/config.ts
	// Example:
	// "config": {
	// 	"markup": {
	// 		"snippets": {
	// 			"foo": "foo.bar>baz"
	// 		},
	// 		"options": {
	// 			"output.selfClosingStyle": "xhtml"
	// 		}
	// 	}
	// }
    "config": {},

    // Unique ID editor instance, used for upcoming online Emmet config.
    // Please do not edit
    "uid": null
}
